{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"/home/divine/Documents/projects/tutorials/full-stack+mobile/abb/packages/app/src/modules/login/LoginConnector.tsx\";\nimport React, { Component } from \"react\";\nimport { LoginController } from \"@abb/controller\";\nimport * as SecureStore from \"expo-secure-store\";\nimport { LoginView } from \"./ui/LoginView\";\nimport { SID_KEY } from \"../shared/constants\";\nexport var LoginConnector = function (_Component) {\n  _inherits(LoginConnector, _Component);\n\n  function LoginConnector() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, LoginConnector);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(LoginConnector)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.saveSessionId = function (sid) {\n      SecureStore.setItemAsync(SID_KEY, sid);\n    };\n\n    return _this;\n  }\n\n  _createClass(LoginConnector, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(LoginController, {\n        onSessionId: this.saveSessionId,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14\n        }\n      }, function (_ref) {\n        var submit = _ref.submit;\n        return React.createElement(LoginView, {\n          submit: submit,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 15\n          }\n        });\n      });\n    }\n  }]);\n\n  return LoginConnector;\n}(Component);","map":{"version":3,"sources":["/home/divine/Documents/projects/tutorials/full-stack+mobile/abb/packages/app/src/modules/login/LoginConnector.tsx"],"names":["React","Component","LoginController","SecureStore","LoginView","SID_KEY","LoginConnector","saveSessionId","sid","setItemAsync","submit"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,eAAT,QAAgC,iBAAhC;AACA,OAAO,KAAKC,WAAZ,MAA6B,mBAA7B;AACA,SAASC,SAAT;AACA,SAASC,OAAT;AAEA,WAAaC,cAAb;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA,UACEC,aADF,GACkB,UAACC,GAAD,EAAiB;AAC/BL,MAAAA,WAAW,CAACM,YAAZ,CAAyBJ,OAAzB,EAAkCG,GAAlC;AACD,KAHH;;AAAA;AAAA;;AAAA;AAAA;AAAA,6BAKW;AACP,aACE,oBAAC,eAAD;AAAiB,QAAA,WAAW,EAAE,KAAKD,aAAnC;AAAA;AAAA;AAAA;AAAA;AAAA,SACG;AAAA,YAAGG,MAAH,QAAGA,MAAH;AAAA,eAAgB,oBAAC,SAAD;AAAW,UAAA,MAAM,EAAEA,MAAnB;AAAA;AAAA;AAAA;AAAA;AAAA,UAAhB;AAAA,OADH,CADF;AAKD;AAXH;;AAAA;AAAA,EAAoCT,SAApC","sourcesContent":["import React, { Component } from \"react\";\nimport { LoginController } from \"@abb/controller\";\nimport * as SecureStore from \"expo-secure-store\";\nimport { LoginView } from \"./ui/LoginView\";\nimport { SID_KEY } from \"../shared/constants\";\n\nexport class LoginConnector extends Component {\n  saveSessionId = (sid: string) => {\n    SecureStore.setItemAsync(SID_KEY, sid);\n  };\n\n  render() {\n    return (\n      <LoginController onSessionId={this.saveSessionId}>\n        {({ submit }) => <LoginView submit={submit} />}\n      </LoginController>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}